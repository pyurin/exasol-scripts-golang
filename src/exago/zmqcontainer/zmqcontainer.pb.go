// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zmqcontainer.proto

package zmqcontainer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ColumnType int32

const (
	ColumnType_PB_UNSUPPORTED ColumnType = 0
	ColumnType_PB_DOUBLE      ColumnType = 1
	ColumnType_PB_INT32       ColumnType = 2
	ColumnType_PB_INT64       ColumnType = 3
	ColumnType_PB_NUMERIC     ColumnType = 4
	ColumnType_PB_TIMESTAMP   ColumnType = 5
	ColumnType_PB_DATE        ColumnType = 6
	ColumnType_PB_STRING      ColumnType = 7
	ColumnType_PB_BOOLEAN     ColumnType = 8
)

var ColumnType_name = map[int32]string{
	0: "PB_UNSUPPORTED",
	1: "PB_DOUBLE",
	2: "PB_INT32",
	3: "PB_INT64",
	4: "PB_NUMERIC",
	5: "PB_TIMESTAMP",
	6: "PB_DATE",
	7: "PB_STRING",
	8: "PB_BOOLEAN",
}

var ColumnType_value = map[string]int32{
	"PB_UNSUPPORTED": 0,
	"PB_DOUBLE":      1,
	"PB_INT32":       2,
	"PB_INT64":       3,
	"PB_NUMERIC":     4,
	"PB_TIMESTAMP":   5,
	"PB_DATE":        6,
	"PB_STRING":      7,
	"PB_BOOLEAN":     8,
}

func (x ColumnType) Enum() *ColumnType {
	p := new(ColumnType)
	*p = x
	return p
}

func (x ColumnType) String() string {
	return proto.EnumName(ColumnType_name, int32(x))
}

func (x *ColumnType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ColumnType_value, data, "ColumnType")
	if err != nil {
		return err
	}
	*x = ColumnType(value)
	return nil
}

func (ColumnType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{0}
}

// type of iteration:
//   scalar, returns  -> PB_EXACTLY_ONCE
//   set, emits       -> PB_MULTIPLE
type IterType int32

const (
	IterType_PB_EXACTLY_ONCE IterType = 1
	IterType_PB_MULTIPLE     IterType = 2
)

var IterType_name = map[int32]string{
	1: "PB_EXACTLY_ONCE",
	2: "PB_MULTIPLE",
}

var IterType_value = map[string]int32{
	"PB_EXACTLY_ONCE": 1,
	"PB_MULTIPLE":     2,
}

func (x IterType) Enum() *IterType {
	p := new(IterType)
	*p = x
	return p
}

func (x IterType) String() string {
	return proto.EnumName(IterType_name, int32(x))
}

func (x *IterType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IterType_value, data, "IterType")
	if err != nil {
		return err
	}
	*x = IterType(value)
	return nil
}

func (IterType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{1}
}

type ImportType int32

const (
	ImportType_PB_IMPORT_SCRIPT_CODE            ImportType = 1
	ImportType_PB_IMPORT_CONNECTION_INFORMATION ImportType = 2
)

var ImportType_name = map[int32]string{
	1: "PB_IMPORT_SCRIPT_CODE",
	2: "PB_IMPORT_CONNECTION_INFORMATION",
}

var ImportType_value = map[string]int32{
	"PB_IMPORT_SCRIPT_CODE":            1,
	"PB_IMPORT_CONNECTION_INFORMATION": 2,
}

func (x ImportType) Enum() *ImportType {
	p := new(ImportType)
	*p = x
	return p
}

func (x ImportType) String() string {
	return proto.EnumName(ImportType_name, int32(x))
}

func (x *ImportType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ImportType_value, data, "ImportType")
	if err != nil {
		return err
	}
	*x = ImportType(value)
	return nil
}

func (ImportType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{2}
}

type SingleCallFunctionId int32

const (
	SingleCallFunctionId_SC_FN_NIL                          SingleCallFunctionId = 0
	SingleCallFunctionId_SC_FN_DEFAULT_OUTPUT_COLUMNS       SingleCallFunctionId = 1
	SingleCallFunctionId_SC_FN_VIRTUAL_SCHEMA_ADAPTER_CALL  SingleCallFunctionId = 2
	SingleCallFunctionId_SC_FN_GENERATE_SQL_FOR_IMPORT_SPEC SingleCallFunctionId = 3
)

var SingleCallFunctionId_name = map[int32]string{
	0: "SC_FN_NIL",
	1: "SC_FN_DEFAULT_OUTPUT_COLUMNS",
	2: "SC_FN_VIRTUAL_SCHEMA_ADAPTER_CALL",
	3: "SC_FN_GENERATE_SQL_FOR_IMPORT_SPEC",
}

var SingleCallFunctionId_value = map[string]int32{
	"SC_FN_NIL":                          0,
	"SC_FN_DEFAULT_OUTPUT_COLUMNS":       1,
	"SC_FN_VIRTUAL_SCHEMA_ADAPTER_CALL":  2,
	"SC_FN_GENERATE_SQL_FOR_IMPORT_SPEC": 3,
}

func (x SingleCallFunctionId) Enum() *SingleCallFunctionId {
	p := new(SingleCallFunctionId)
	*p = x
	return p
}

func (x SingleCallFunctionId) String() string {
	return proto.EnumName(SingleCallFunctionId_name, int32(x))
}

func (x *SingleCallFunctionId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SingleCallFunctionId_value, data, "SingleCallFunctionId")
	if err != nil {
		return err
	}
	*x = SingleCallFunctionId(value)
	return nil
}

func (SingleCallFunctionId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{3}
}

type MessageType int32

const (
	MessageType_MT_UNKNOWN        MessageType = 0
	MessageType_MT_CLIENT         MessageType = 1
	MessageType_MT_INFO           MessageType = 2
	MessageType_MT_META           MessageType = 3
	MessageType_MT_CLOSE          MessageType = 4
	MessageType_MT_IMPORT         MessageType = 5
	MessageType_MT_NEXT           MessageType = 6
	MessageType_MT_RESET          MessageType = 7
	MessageType_MT_EMIT           MessageType = 8
	MessageType_MT_RUN            MessageType = 9
	MessageType_MT_DONE           MessageType = 10
	MessageType_MT_CLEANUP        MessageType = 11
	MessageType_MT_FINISHED       MessageType = 12
	MessageType_MT_PING_PONG      MessageType = 13
	MessageType_MT_TRY_AGAIN      MessageType = 14
	MessageType_MT_CALL           MessageType = 15
	MessageType_MT_RETURN         MessageType = 16
	MessageType_MT_UNDEFINED_CALL MessageType = 17
)

var MessageType_name = map[int32]string{
	0:  "MT_UNKNOWN",
	1:  "MT_CLIENT",
	2:  "MT_INFO",
	3:  "MT_META",
	4:  "MT_CLOSE",
	5:  "MT_IMPORT",
	6:  "MT_NEXT",
	7:  "MT_RESET",
	8:  "MT_EMIT",
	9:  "MT_RUN",
	10: "MT_DONE",
	11: "MT_CLEANUP",
	12: "MT_FINISHED",
	13: "MT_PING_PONG",
	14: "MT_TRY_AGAIN",
	15: "MT_CALL",
	16: "MT_RETURN",
	17: "MT_UNDEFINED_CALL",
}

var MessageType_value = map[string]int32{
	"MT_UNKNOWN":        0,
	"MT_CLIENT":         1,
	"MT_INFO":           2,
	"MT_META":           3,
	"MT_CLOSE":          4,
	"MT_IMPORT":         5,
	"MT_NEXT":           6,
	"MT_RESET":          7,
	"MT_EMIT":           8,
	"MT_RUN":            9,
	"MT_DONE":           10,
	"MT_CLEANUP":        11,
	"MT_FINISHED":       12,
	"MT_PING_PONG":      13,
	"MT_TRY_AGAIN":      14,
	"MT_CALL":           15,
	"MT_RETURN":         16,
	"MT_UNDEFINED_CALL": 17,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{4}
}

type ExascriptMetadata struct {
	InputIterType  *IterType                            `protobuf:"varint,1,req,name=input_iter_type,enum=IterType" json:"input_iter_type,omitempty"`
	OutputIterType *IterType                            `protobuf:"varint,2,req,name=output_iter_type,enum=IterType" json:"output_iter_type,omitempty"`
	InputColumns   []*ExascriptMetadataColumnDefinition `protobuf:"bytes,3,rep,name=input_columns" json:"input_columns,omitempty"`
	OutputColumns  []*ExascriptMetadataColumnDefinition `protobuf:"bytes,4,rep,name=output_columns" json:"output_columns,omitempty"`
	// If set, do not enter the run() state but instead wait for single
	// synchronous function invokations
	SingleCallMode       *bool    `protobuf:"varint,5,req,name=single_call_mode" json:"single_call_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptMetadata) Reset()         { *m = ExascriptMetadata{} }
func (m *ExascriptMetadata) String() string { return proto.CompactTextString(m) }
func (*ExascriptMetadata) ProtoMessage()    {}
func (*ExascriptMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{0}
}

func (m *ExascriptMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptMetadata.Unmarshal(m, b)
}
func (m *ExascriptMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptMetadata.Marshal(b, m, deterministic)
}
func (m *ExascriptMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptMetadata.Merge(m, src)
}
func (m *ExascriptMetadata) XXX_Size() int {
	return xxx_messageInfo_ExascriptMetadata.Size(m)
}
func (m *ExascriptMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptMetadata proto.InternalMessageInfo

func (m *ExascriptMetadata) GetInputIterType() IterType {
	if m != nil && m.InputIterType != nil {
		return *m.InputIterType
	}
	return IterType_PB_EXACTLY_ONCE
}

func (m *ExascriptMetadata) GetOutputIterType() IterType {
	if m != nil && m.OutputIterType != nil {
		return *m.OutputIterType
	}
	return IterType_PB_EXACTLY_ONCE
}

func (m *ExascriptMetadata) GetInputColumns() []*ExascriptMetadataColumnDefinition {
	if m != nil {
		return m.InputColumns
	}
	return nil
}

func (m *ExascriptMetadata) GetOutputColumns() []*ExascriptMetadataColumnDefinition {
	if m != nil {
		return m.OutputColumns
	}
	return nil
}

func (m *ExascriptMetadata) GetSingleCallMode() bool {
	if m != nil && m.SingleCallMode != nil {
		return *m.SingleCallMode
	}
	return false
}

type ExascriptMetadataColumnDefinition struct {
	// Name of column as UTF-8 String
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// Type of column (see "enum column_type")
	Type *ColumnType `protobuf:"varint,2,opt,name=type,enum=ColumnType" json:"type,omitempty"`
	// Type name how it is shown in EXASolution
	TypeName *string `protobuf:"bytes,3,req,name=type_name" json:"type_name,omitempty"`
	// Size of Type, for CHAR and VARCHAR types
	Size *uint32 `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	// Precision, for DECIMAL types
	Precision *uint32 `protobuf:"varint,5,opt,name=precision" json:"precision,omitempty"`
	// Scale, for DECIMAL types
	Scale                *uint32  `protobuf:"varint,6,opt,name=scale" json:"scale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptMetadataColumnDefinition) Reset()         { *m = ExascriptMetadataColumnDefinition{} }
func (m *ExascriptMetadataColumnDefinition) String() string { return proto.CompactTextString(m) }
func (*ExascriptMetadataColumnDefinition) ProtoMessage()    {}
func (*ExascriptMetadataColumnDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{0, 0}
}

func (m *ExascriptMetadataColumnDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptMetadataColumnDefinition.Unmarshal(m, b)
}
func (m *ExascriptMetadataColumnDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptMetadataColumnDefinition.Marshal(b, m, deterministic)
}
func (m *ExascriptMetadataColumnDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptMetadataColumnDefinition.Merge(m, src)
}
func (m *ExascriptMetadataColumnDefinition) XXX_Size() int {
	return xxx_messageInfo_ExascriptMetadataColumnDefinition.Size(m)
}
func (m *ExascriptMetadataColumnDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptMetadataColumnDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptMetadataColumnDefinition proto.InternalMessageInfo

func (m *ExascriptMetadataColumnDefinition) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ExascriptMetadataColumnDefinition) GetType() ColumnType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ColumnType_PB_UNSUPPORTED
}

func (m *ExascriptMetadataColumnDefinition) GetTypeName() string {
	if m != nil && m.TypeName != nil {
		return *m.TypeName
	}
	return ""
}

func (m *ExascriptMetadataColumnDefinition) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ExascriptMetadataColumnDefinition) GetPrecision() uint32 {
	if m != nil && m.Precision != nil {
		return *m.Precision
	}
	return 0
}

func (m *ExascriptMetadataColumnDefinition) GetScale() uint32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

type ExascriptTableData struct {
	// Rows count in current message
	Rows *uint64 `protobuf:"varint,1,req,name=rows" json:"rows,omitempty"`
	// Rows count in current group in EXASolution
	// Can be 0 if no group defined
	RowsInGroup *uint64 `protobuf:"varint,8,req,name=rows_in_group" json:"rows_in_group,omitempty"`
	// Storage for following types: NUMERIC, TIMESTAMP, DATE and STRING
	DataString []string  `protobuf:"bytes,2,rep,name=data_string" json:"data_string,omitempty"`
	DataNulls  []bool    `protobuf:"varint,3,rep,packed,name=data_nulls" json:"data_nulls,omitempty"`
	DataBool   []bool    `protobuf:"varint,4,rep,packed,name=data_bool" json:"data_bool,omitempty"`
	DataInt32  []int32   `protobuf:"varint,5,rep,packed,name=data_int32" json:"data_int32,omitempty"`
	DataInt64  []int64   `protobuf:"varint,6,rep,packed,name=data_int64" json:"data_int64,omitempty"`
	DataDouble []float64 `protobuf:"fixed64,7,rep,packed,name=data_double" json:"data_double,omitempty"`
	// Local row numbers
	RowNumber            []uint64 `protobuf:"varint,9,rep,packed,name=row_number" json:"row_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptTableData) Reset()         { *m = ExascriptTableData{} }
func (m *ExascriptTableData) String() string { return proto.CompactTextString(m) }
func (*ExascriptTableData) ProtoMessage()    {}
func (*ExascriptTableData) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{1}
}

func (m *ExascriptTableData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptTableData.Unmarshal(m, b)
}
func (m *ExascriptTableData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptTableData.Marshal(b, m, deterministic)
}
func (m *ExascriptTableData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptTableData.Merge(m, src)
}
func (m *ExascriptTableData) XXX_Size() int {
	return xxx_messageInfo_ExascriptTableData.Size(m)
}
func (m *ExascriptTableData) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptTableData.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptTableData proto.InternalMessageInfo

func (m *ExascriptTableData) GetRows() uint64 {
	if m != nil && m.Rows != nil {
		return *m.Rows
	}
	return 0
}

func (m *ExascriptTableData) GetRowsInGroup() uint64 {
	if m != nil && m.RowsInGroup != nil {
		return *m.RowsInGroup
	}
	return 0
}

func (m *ExascriptTableData) GetDataString() []string {
	if m != nil {
		return m.DataString
	}
	return nil
}

func (m *ExascriptTableData) GetDataNulls() []bool {
	if m != nil {
		return m.DataNulls
	}
	return nil
}

func (m *ExascriptTableData) GetDataBool() []bool {
	if m != nil {
		return m.DataBool
	}
	return nil
}

func (m *ExascriptTableData) GetDataInt32() []int32 {
	if m != nil {
		return m.DataInt32
	}
	return nil
}

func (m *ExascriptTableData) GetDataInt64() []int64 {
	if m != nil {
		return m.DataInt64
	}
	return nil
}

func (m *ExascriptTableData) GetDataDouble() []float64 {
	if m != nil {
		return m.DataDouble
	}
	return nil
}

func (m *ExascriptTableData) GetRowNumber() []uint64 {
	if m != nil {
		return m.RowNumber
	}
	return nil
}

type ExascriptClient struct {
	// URL of the client in form: tcp://10.10.1.1:2000
	ClientName *string `protobuf:"bytes,1,req,name=client_name" json:"client_name,omitempty"`
	// UTF-8 Text, which is received from redirector and send to VM
	// This string will not be interpreted by EXASolution
	MetaInfo             *string  `protobuf:"bytes,2,opt,name=meta_info" json:"meta_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptClient) Reset()         { *m = ExascriptClient{} }
func (m *ExascriptClient) String() string { return proto.CompactTextString(m) }
func (*ExascriptClient) ProtoMessage()    {}
func (*ExascriptClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{2}
}

func (m *ExascriptClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptClient.Unmarshal(m, b)
}
func (m *ExascriptClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptClient.Marshal(b, m, deterministic)
}
func (m *ExascriptClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptClient.Merge(m, src)
}
func (m *ExascriptClient) XXX_Size() int {
	return xxx_messageInfo_ExascriptClient.Size(m)
}
func (m *ExascriptClient) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptClient.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptClient proto.InternalMessageInfo

func (m *ExascriptClient) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *ExascriptClient) GetMetaInfo() string {
	if m != nil && m.MetaInfo != nil {
		return *m.MetaInfo
	}
	return ""
}

type ExascriptInfo struct {
	DatabaseName    *string `protobuf:"bytes,1,req,name=database_name" json:"database_name,omitempty"`
	DatabaseVersion *string `protobuf:"bytes,2,req,name=database_version" json:"database_version,omitempty"`
	ScriptName      *string `protobuf:"bytes,3,req,name=script_name" json:"script_name,omitempty"`
	SourceCode      *string `protobuf:"bytes,4,req,name=source_code" json:"source_code,omitempty"`
	// Session ID: long unique number of current session in EXASolution
	SessionId *uint64 `protobuf:"varint,5,req,name=session_id" json:"session_id,omitempty"`
	// Number of SQL Statement in current Session
	StatementId *uint32 `protobuf:"varint,6,req,name=statement_id" json:"statement_id,omitempty"`
	// Number of nodes in EXASolution
	NodeCount *uint32 `protobuf:"varint,7,req,name=node_count" json:"node_count,omitempty"`
	// Current node number, starting at 0
	NodeId *uint32 `protobuf:"varint,8,req,name=node_id" json:"node_id,omitempty"`
	// Long unique number of VM
	VmId *uint64 `protobuf:"varint,9,req,name=vm_id" json:"vm_id,omitempty"`
	// Type of the VM
	//required exascript_vmtype vm_type = 10;
	// A VM should not exceed this memory limit
	// For external UDF's it doesn't matter
	MaximalMemoryLimit *uint64 `protobuf:"varint,11,req,name=maximal_memory_limit" json:"maximal_memory_limit,omitempty"`
	// meta_info contains the string from meta_info in exascript_client message
	MetaInfo             *string  `protobuf:"bytes,12,opt,name=meta_info" json:"meta_info,omitempty"`
	ScriptSchema         *string  `protobuf:"bytes,13,req,name=script_schema" json:"script_schema,omitempty"`
	CurrentUser          *string  `protobuf:"bytes,14,opt,name=current_user" json:"current_user,omitempty"`
	CurrentSchema        *string  `protobuf:"bytes,15,opt,name=current_schema" json:"current_schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptInfo) Reset()         { *m = ExascriptInfo{} }
func (m *ExascriptInfo) String() string { return proto.CompactTextString(m) }
func (*ExascriptInfo) ProtoMessage()    {}
func (*ExascriptInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{3}
}

func (m *ExascriptInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptInfo.Unmarshal(m, b)
}
func (m *ExascriptInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptInfo.Marshal(b, m, deterministic)
}
func (m *ExascriptInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptInfo.Merge(m, src)
}
func (m *ExascriptInfo) XXX_Size() int {
	return xxx_messageInfo_ExascriptInfo.Size(m)
}
func (m *ExascriptInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptInfo proto.InternalMessageInfo

func (m *ExascriptInfo) GetDatabaseName() string {
	if m != nil && m.DatabaseName != nil {
		return *m.DatabaseName
	}
	return ""
}

func (m *ExascriptInfo) GetDatabaseVersion() string {
	if m != nil && m.DatabaseVersion != nil {
		return *m.DatabaseVersion
	}
	return ""
}

func (m *ExascriptInfo) GetScriptName() string {
	if m != nil && m.ScriptName != nil {
		return *m.ScriptName
	}
	return ""
}

func (m *ExascriptInfo) GetSourceCode() string {
	if m != nil && m.SourceCode != nil {
		return *m.SourceCode
	}
	return ""
}

func (m *ExascriptInfo) GetSessionId() uint64 {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return 0
}

func (m *ExascriptInfo) GetStatementId() uint32 {
	if m != nil && m.StatementId != nil {
		return *m.StatementId
	}
	return 0
}

func (m *ExascriptInfo) GetNodeCount() uint32 {
	if m != nil && m.NodeCount != nil {
		return *m.NodeCount
	}
	return 0
}

func (m *ExascriptInfo) GetNodeId() uint32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *ExascriptInfo) GetVmId() uint64 {
	if m != nil && m.VmId != nil {
		return *m.VmId
	}
	return 0
}

func (m *ExascriptInfo) GetMaximalMemoryLimit() uint64 {
	if m != nil && m.MaximalMemoryLimit != nil {
		return *m.MaximalMemoryLimit
	}
	return 0
}

func (m *ExascriptInfo) GetMetaInfo() string {
	if m != nil && m.MetaInfo != nil {
		return *m.MetaInfo
	}
	return ""
}

func (m *ExascriptInfo) GetScriptSchema() string {
	if m != nil && m.ScriptSchema != nil {
		return *m.ScriptSchema
	}
	return ""
}

func (m *ExascriptInfo) GetCurrentUser() string {
	if m != nil && m.CurrentUser != nil {
		return *m.CurrentUser
	}
	return ""
}

func (m *ExascriptInfo) GetCurrentSchema() string {
	if m != nil && m.CurrentSchema != nil {
		return *m.CurrentSchema
	}
	return ""
}

type ExascriptPing struct {
	// the string from exascript_client message
	MetaInfo             *string  `protobuf:"bytes,1,req,name=meta_info" json:"meta_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptPing) Reset()         { *m = ExascriptPing{} }
func (m *ExascriptPing) String() string { return proto.CompactTextString(m) }
func (*ExascriptPing) ProtoMessage()    {}
func (*ExascriptPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{4}
}

func (m *ExascriptPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptPing.Unmarshal(m, b)
}
func (m *ExascriptPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptPing.Marshal(b, m, deterministic)
}
func (m *ExascriptPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptPing.Merge(m, src)
}
func (m *ExascriptPing) XXX_Size() int {
	return xxx_messageInfo_ExascriptPing.Size(m)
}
func (m *ExascriptPing) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptPing.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptPing proto.InternalMessageInfo

func (m *ExascriptPing) GetMetaInfo() string {
	if m != nil && m.MetaInfo != nil {
		return *m.MetaInfo
	}
	return ""
}

type ExascriptClose struct {
	ExceptionMessage     *string  `protobuf:"bytes,1,opt,name=exception_message" json:"exception_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptClose) Reset()         { *m = ExascriptClose{} }
func (m *ExascriptClose) String() string { return proto.CompactTextString(m) }
func (*ExascriptClose) ProtoMessage()    {}
func (*ExascriptClose) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{5}
}

func (m *ExascriptClose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptClose.Unmarshal(m, b)
}
func (m *ExascriptClose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptClose.Marshal(b, m, deterministic)
}
func (m *ExascriptClose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptClose.Merge(m, src)
}
func (m *ExascriptClose) XXX_Size() int {
	return xxx_messageInfo_ExascriptClose.Size(m)
}
func (m *ExascriptClose) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptClose.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptClose proto.InternalMessageInfo

func (m *ExascriptClose) GetExceptionMessage() string {
	if m != nil && m.ExceptionMessage != nil {
		return *m.ExceptionMessage
	}
	return ""
}

type ExascriptImportReq struct {
	ScriptName           *string     `protobuf:"bytes,1,req,name=script_name" json:"script_name,omitempty"`
	Kind                 *ImportType `protobuf:"varint,2,opt,name=kind,enum=ImportType,def=1" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExascriptImportReq) Reset()         { *m = ExascriptImportReq{} }
func (m *ExascriptImportReq) String() string { return proto.CompactTextString(m) }
func (*ExascriptImportReq) ProtoMessage()    {}
func (*ExascriptImportReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{6}
}

func (m *ExascriptImportReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptImportReq.Unmarshal(m, b)
}
func (m *ExascriptImportReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptImportReq.Marshal(b, m, deterministic)
}
func (m *ExascriptImportReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptImportReq.Merge(m, src)
}
func (m *ExascriptImportReq) XXX_Size() int {
	return xxx_messageInfo_ExascriptImportReq.Size(m)
}
func (m *ExascriptImportReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptImportReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptImportReq proto.InternalMessageInfo

const Default_ExascriptImportReq_Kind ImportType = ImportType_PB_IMPORT_SCRIPT_CODE

func (m *ExascriptImportReq) GetScriptName() string {
	if m != nil && m.ScriptName != nil {
		return *m.ScriptName
	}
	return ""
}

func (m *ExascriptImportReq) GetKind() ImportType {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return Default_ExascriptImportReq_Kind
}

type ConnectionInformationRep struct {
	Kind                 *string  `protobuf:"bytes,1,req,name=kind" json:"kind,omitempty"`
	Address              *string  `protobuf:"bytes,2,req,name=address" json:"address,omitempty"`
	User                 *string  `protobuf:"bytes,3,req,name=user" json:"user,omitempty"`
	Password             *string  `protobuf:"bytes,4,req,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionInformationRep) Reset()         { *m = ConnectionInformationRep{} }
func (m *ConnectionInformationRep) String() string { return proto.CompactTextString(m) }
func (*ConnectionInformationRep) ProtoMessage()    {}
func (*ConnectionInformationRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{7}
}

func (m *ConnectionInformationRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionInformationRep.Unmarshal(m, b)
}
func (m *ConnectionInformationRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionInformationRep.Marshal(b, m, deterministic)
}
func (m *ConnectionInformationRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionInformationRep.Merge(m, src)
}
func (m *ConnectionInformationRep) XXX_Size() int {
	return xxx_messageInfo_ConnectionInformationRep.Size(m)
}
func (m *ConnectionInformationRep) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionInformationRep.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionInformationRep proto.InternalMessageInfo

func (m *ConnectionInformationRep) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *ConnectionInformationRep) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *ConnectionInformationRep) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *ConnectionInformationRep) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type ExascriptImportRep struct {
	SourceCode            *string                   `protobuf:"bytes,1,opt,name=source_code" json:"source_code,omitempty"`
	ExceptionMessage      *string                   `protobuf:"bytes,2,opt,name=exception_message" json:"exception_message,omitempty"`
	ConnectionInformation *ConnectionInformationRep `protobuf:"bytes,3,opt,name=connection_information" json:"connection_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                  `json:"-"`
	XXX_unrecognized      []byte                    `json:"-"`
	XXX_sizecache         int32                     `json:"-"`
}

func (m *ExascriptImportRep) Reset()         { *m = ExascriptImportRep{} }
func (m *ExascriptImportRep) String() string { return proto.CompactTextString(m) }
func (*ExascriptImportRep) ProtoMessage()    {}
func (*ExascriptImportRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{8}
}

func (m *ExascriptImportRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptImportRep.Unmarshal(m, b)
}
func (m *ExascriptImportRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptImportRep.Marshal(b, m, deterministic)
}
func (m *ExascriptImportRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptImportRep.Merge(m, src)
}
func (m *ExascriptImportRep) XXX_Size() int {
	return xxx_messageInfo_ExascriptImportRep.Size(m)
}
func (m *ExascriptImportRep) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptImportRep.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptImportRep proto.InternalMessageInfo

func (m *ExascriptImportRep) GetSourceCode() string {
	if m != nil && m.SourceCode != nil {
		return *m.SourceCode
	}
	return ""
}

func (m *ExascriptImportRep) GetExceptionMessage() string {
	if m != nil && m.ExceptionMessage != nil {
		return *m.ExceptionMessage
	}
	return ""
}

func (m *ExascriptImportRep) GetConnectionInformation() *ConnectionInformationRep {
	if m != nil {
		return m.ConnectionInformation
	}
	return nil
}

type ExascriptNextDataRep struct {
	Table                *ExascriptTableData `protobuf:"bytes,2,req,name=table" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ExascriptNextDataRep) Reset()         { *m = ExascriptNextDataRep{} }
func (m *ExascriptNextDataRep) String() string { return proto.CompactTextString(m) }
func (*ExascriptNextDataRep) ProtoMessage()    {}
func (*ExascriptNextDataRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{9}
}

func (m *ExascriptNextDataRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptNextDataRep.Unmarshal(m, b)
}
func (m *ExascriptNextDataRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptNextDataRep.Marshal(b, m, deterministic)
}
func (m *ExascriptNextDataRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptNextDataRep.Merge(m, src)
}
func (m *ExascriptNextDataRep) XXX_Size() int {
	return xxx_messageInfo_ExascriptNextDataRep.Size(m)
}
func (m *ExascriptNextDataRep) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptNextDataRep.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptNextDataRep proto.InternalMessageInfo

func (m *ExascriptNextDataRep) GetTable() *ExascriptTableData {
	if m != nil {
		return m.Table
	}
	return nil
}

type ExascriptEmitDataReq struct {
	Table                *ExascriptTableData `protobuf:"bytes,2,req,name=table" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ExascriptEmitDataReq) Reset()         { *m = ExascriptEmitDataReq{} }
func (m *ExascriptEmitDataReq) String() string { return proto.CompactTextString(m) }
func (*ExascriptEmitDataReq) ProtoMessage()    {}
func (*ExascriptEmitDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{10}
}

func (m *ExascriptEmitDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptEmitDataReq.Unmarshal(m, b)
}
func (m *ExascriptEmitDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptEmitDataReq.Marshal(b, m, deterministic)
}
func (m *ExascriptEmitDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptEmitDataReq.Merge(m, src)
}
func (m *ExascriptEmitDataReq) XXX_Size() int {
	return xxx_messageInfo_ExascriptEmitDataReq.Size(m)
}
func (m *ExascriptEmitDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptEmitDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptEmitDataReq proto.InternalMessageInfo

func (m *ExascriptEmitDataReq) GetTable() *ExascriptTableData {
	if m != nil {
		return m.Table
	}
	return nil
}

// --- sending a single result from process to exasolution ---------------------
type ExascriptReturnReq struct {
	Result               *string  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptReturnReq) Reset()         { *m = ExascriptReturnReq{} }
func (m *ExascriptReturnReq) String() string { return proto.CompactTextString(m) }
func (*ExascriptReturnReq) ProtoMessage()    {}
func (*ExascriptReturnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{11}
}

func (m *ExascriptReturnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptReturnReq.Unmarshal(m, b)
}
func (m *ExascriptReturnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptReturnReq.Marshal(b, m, deterministic)
}
func (m *ExascriptReturnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptReturnReq.Merge(m, src)
}
func (m *ExascriptReturnReq) XXX_Size() int {
	return xxx_messageInfo_ExascriptReturnReq.Size(m)
}
func (m *ExascriptReturnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptReturnReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptReturnReq proto.InternalMessageInfo

func (m *ExascriptReturnReq) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type ExascriptUndefinedCallReq struct {
	RemoteFn             *string  `protobuf:"bytes,1,req,name=remote_fn" json:"remote_fn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExascriptUndefinedCallReq) Reset()         { *m = ExascriptUndefinedCallReq{} }
func (m *ExascriptUndefinedCallReq) String() string { return proto.CompactTextString(m) }
func (*ExascriptUndefinedCallReq) ProtoMessage()    {}
func (*ExascriptUndefinedCallReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{12}
}

func (m *ExascriptUndefinedCallReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptUndefinedCallReq.Unmarshal(m, b)
}
func (m *ExascriptUndefinedCallReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptUndefinedCallReq.Marshal(b, m, deterministic)
}
func (m *ExascriptUndefinedCallReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptUndefinedCallReq.Merge(m, src)
}
func (m *ExascriptUndefinedCallReq) XXX_Size() int {
	return xxx_messageInfo_ExascriptUndefinedCallReq.Size(m)
}
func (m *ExascriptUndefinedCallReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptUndefinedCallReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptUndefinedCallReq proto.InternalMessageInfo

func (m *ExascriptUndefinedCallReq) GetRemoteFn() string {
	if m != nil && m.RemoteFn != nil {
		return *m.RemoteFn
	}
	return ""
}

type KeyValuePair struct {
	Key                  *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{13}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type ImportSpecificationRep struct {
	IsSubselect                  *bool                                `protobuf:"varint,1,req,name=is_subselect" json:"is_subselect,omitempty"`
	ConnectionInformation        *ConnectionInformationRep            `protobuf:"bytes,2,opt,name=connection_information" json:"connection_information,omitempty"`
	ConnectionName               *string                              `protobuf:"bytes,3,opt,name=connection_name" json:"connection_name,omitempty"`
	SubselectColumnSpecification []*ExascriptMetadataColumnDefinition `protobuf:"bytes,4,rep,name=subselect_column_specification" json:"subselect_column_specification,omitempty"`
	Parameters                   []*KeyValuePair                      `protobuf:"bytes,5,rep,name=parameters" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                             `json:"-"`
	XXX_unrecognized             []byte                               `json:"-"`
	XXX_sizecache                int32                                `json:"-"`
}

func (m *ImportSpecificationRep) Reset()         { *m = ImportSpecificationRep{} }
func (m *ImportSpecificationRep) String() string { return proto.CompactTextString(m) }
func (*ImportSpecificationRep) ProtoMessage()    {}
func (*ImportSpecificationRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{14}
}

func (m *ImportSpecificationRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportSpecificationRep.Unmarshal(m, b)
}
func (m *ImportSpecificationRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportSpecificationRep.Marshal(b, m, deterministic)
}
func (m *ImportSpecificationRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportSpecificationRep.Merge(m, src)
}
func (m *ImportSpecificationRep) XXX_Size() int {
	return xxx_messageInfo_ImportSpecificationRep.Size(m)
}
func (m *ImportSpecificationRep) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportSpecificationRep.DiscardUnknown(m)
}

var xxx_messageInfo_ImportSpecificationRep proto.InternalMessageInfo

func (m *ImportSpecificationRep) GetIsSubselect() bool {
	if m != nil && m.IsSubselect != nil {
		return *m.IsSubselect
	}
	return false
}

func (m *ImportSpecificationRep) GetConnectionInformation() *ConnectionInformationRep {
	if m != nil {
		return m.ConnectionInformation
	}
	return nil
}

func (m *ImportSpecificationRep) GetConnectionName() string {
	if m != nil && m.ConnectionName != nil {
		return *m.ConnectionName
	}
	return ""
}

func (m *ImportSpecificationRep) GetSubselectColumnSpecification() []*ExascriptMetadataColumnDefinition {
	if m != nil {
		return m.SubselectColumnSpecification
	}
	return nil
}

func (m *ImportSpecificationRep) GetParameters() []*KeyValuePair {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ExascriptSingleCallRep struct {
	Fn                   *SingleCallFunctionId   `protobuf:"varint,1,req,name=fn,enum=SingleCallFunctionId" json:"fn,omitempty"`
	ImportSpecification  *ImportSpecificationRep `protobuf:"bytes,2,opt,name=import_specification" json:"import_specification,omitempty"`
	JsonArg              *string                 `protobuf:"bytes,3,opt,name=json_arg" json:"json_arg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ExascriptSingleCallRep) Reset()         { *m = ExascriptSingleCallRep{} }
func (m *ExascriptSingleCallRep) String() string { return proto.CompactTextString(m) }
func (*ExascriptSingleCallRep) ProtoMessage()    {}
func (*ExascriptSingleCallRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{15}
}

func (m *ExascriptSingleCallRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptSingleCallRep.Unmarshal(m, b)
}
func (m *ExascriptSingleCallRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptSingleCallRep.Marshal(b, m, deterministic)
}
func (m *ExascriptSingleCallRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptSingleCallRep.Merge(m, src)
}
func (m *ExascriptSingleCallRep) XXX_Size() int {
	return xxx_messageInfo_ExascriptSingleCallRep.Size(m)
}
func (m *ExascriptSingleCallRep) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptSingleCallRep.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptSingleCallRep proto.InternalMessageInfo

func (m *ExascriptSingleCallRep) GetFn() SingleCallFunctionId {
	if m != nil && m.Fn != nil {
		return *m.Fn
	}
	return SingleCallFunctionId_SC_FN_NIL
}

func (m *ExascriptSingleCallRep) GetImportSpecification() *ImportSpecificationRep {
	if m != nil {
		return m.ImportSpecification
	}
	return nil
}

func (m *ExascriptSingleCallRep) GetJsonArg() string {
	if m != nil && m.JsonArg != nil {
		return *m.JsonArg
	}
	return ""
}

type ExascriptRequest struct {
	Type                 *MessageType               `protobuf:"varint,1,req,name=type,enum=MessageType" json:"type,omitempty"`
	ConnectionId         *uint64                    `protobuf:"varint,2,req,name=connection_id" json:"connection_id,omitempty"`
	Client               *ExascriptClient           `protobuf:"bytes,3,opt,name=client" json:"client,omitempty"`
	Info                 *ExascriptInfo             `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	Close                *ExascriptClose            `protobuf:"bytes,5,opt,name=close" json:"close,omitempty"`
	Import               *ExascriptImportReq        `protobuf:"bytes,6,opt,name=import" json:"import,omitempty"`
	Emit                 *ExascriptEmitDataReq      `protobuf:"bytes,7,opt,name=emit" json:"emit,omitempty"`
	Ping                 *ExascriptPing             `protobuf:"bytes,8,opt,name=ping" json:"ping,omitempty"`
	CallResult           *ExascriptReturnReq        `protobuf:"bytes,9,opt,name=call_result" json:"call_result,omitempty"`
	UndefinedCall        *ExascriptUndefinedCallReq `protobuf:"bytes,10,opt,name=undefined_call" json:"undefined_call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ExascriptRequest) Reset()         { *m = ExascriptRequest{} }
func (m *ExascriptRequest) String() string { return proto.CompactTextString(m) }
func (*ExascriptRequest) ProtoMessage()    {}
func (*ExascriptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{16}
}

func (m *ExascriptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptRequest.Unmarshal(m, b)
}
func (m *ExascriptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptRequest.Marshal(b, m, deterministic)
}
func (m *ExascriptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptRequest.Merge(m, src)
}
func (m *ExascriptRequest) XXX_Size() int {
	return xxx_messageInfo_ExascriptRequest.Size(m)
}
func (m *ExascriptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptRequest proto.InternalMessageInfo

func (m *ExascriptRequest) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_MT_UNKNOWN
}

func (m *ExascriptRequest) GetConnectionId() uint64 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *ExascriptRequest) GetClient() *ExascriptClient {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *ExascriptRequest) GetInfo() *ExascriptInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ExascriptRequest) GetClose() *ExascriptClose {
	if m != nil {
		return m.Close
	}
	return nil
}

func (m *ExascriptRequest) GetImport() *ExascriptImportReq {
	if m != nil {
		return m.Import
	}
	return nil
}

func (m *ExascriptRequest) GetEmit() *ExascriptEmitDataReq {
	if m != nil {
		return m.Emit
	}
	return nil
}

func (m *ExascriptRequest) GetPing() *ExascriptPing {
	if m != nil {
		return m.Ping
	}
	return nil
}

func (m *ExascriptRequest) GetCallResult() *ExascriptReturnReq {
	if m != nil {
		return m.CallResult
	}
	return nil
}

func (m *ExascriptRequest) GetUndefinedCall() *ExascriptUndefinedCallReq {
	if m != nil {
		return m.UndefinedCall
	}
	return nil
}

type ExascriptResponse struct {
	Type                 *MessageType            `protobuf:"varint,1,req,name=type,enum=MessageType" json:"type,omitempty"`
	ConnectionId         *uint64                 `protobuf:"varint,2,req,name=connection_id" json:"connection_id,omitempty"`
	Client               *ExascriptClient        `protobuf:"bytes,3,opt,name=client" json:"client,omitempty"`
	Info                 *ExascriptInfo          `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	Meta                 *ExascriptMetadata      `protobuf:"bytes,5,opt,name=meta" json:"meta,omitempty"`
	Close                *ExascriptClose         `protobuf:"bytes,6,opt,name=close" json:"close,omitempty"`
	Import               *ExascriptImportRep     `protobuf:"bytes,7,opt,name=import" json:"import,omitempty"`
	Next                 *ExascriptNextDataRep   `protobuf:"bytes,8,opt,name=next" json:"next,omitempty"`
	Ping                 *ExascriptPing          `protobuf:"bytes,9,opt,name=ping" json:"ping,omitempty"`
	Call                 *ExascriptSingleCallRep `protobuf:"bytes,10,opt,name=call" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ExascriptResponse) Reset()         { *m = ExascriptResponse{} }
func (m *ExascriptResponse) String() string { return proto.CompactTextString(m) }
func (*ExascriptResponse) ProtoMessage()    {}
func (*ExascriptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91e3ffbfa0fb188a, []int{17}
}

func (m *ExascriptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExascriptResponse.Unmarshal(m, b)
}
func (m *ExascriptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExascriptResponse.Marshal(b, m, deterministic)
}
func (m *ExascriptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExascriptResponse.Merge(m, src)
}
func (m *ExascriptResponse) XXX_Size() int {
	return xxx_messageInfo_ExascriptResponse.Size(m)
}
func (m *ExascriptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExascriptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExascriptResponse proto.InternalMessageInfo

func (m *ExascriptResponse) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_MT_UNKNOWN
}

func (m *ExascriptResponse) GetConnectionId() uint64 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *ExascriptResponse) GetClient() *ExascriptClient {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *ExascriptResponse) GetInfo() *ExascriptInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ExascriptResponse) GetMeta() *ExascriptMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ExascriptResponse) GetClose() *ExascriptClose {
	if m != nil {
		return m.Close
	}
	return nil
}

func (m *ExascriptResponse) GetImport() *ExascriptImportRep {
	if m != nil {
		return m.Import
	}
	return nil
}

func (m *ExascriptResponse) GetNext() *ExascriptNextDataRep {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ExascriptResponse) GetPing() *ExascriptPing {
	if m != nil {
		return m.Ping
	}
	return nil
}

func (m *ExascriptResponse) GetCall() *ExascriptSingleCallRep {
	if m != nil {
		return m.Call
	}
	return nil
}

func Initialize() {
	proto.RegisterEnum("ColumnType", ColumnType_name, ColumnType_value)
	proto.RegisterEnum("IterType", IterType_name, IterType_value)
	proto.RegisterEnum("ImportType", ImportType_name, ImportType_value)
	proto.RegisterEnum("SingleCallFunctionId", SingleCallFunctionId_name, SingleCallFunctionId_value)
	proto.RegisterEnum("MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*ExascriptMetadata)(nil), "exascript_metadata")
	proto.RegisterType((*ExascriptMetadataColumnDefinition)(nil), "exascript_metadata.column_definition")
	proto.RegisterType((*ExascriptTableData)(nil), "exascript_table_data")
	proto.RegisterType((*ExascriptClient)(nil), "exascript_client")
	proto.RegisterType((*ExascriptInfo)(nil), "exascript_info")
	proto.RegisterType((*ExascriptPing)(nil), "exascript_ping")
	proto.RegisterType((*ExascriptClose)(nil), "exascript_close")
	proto.RegisterType((*ExascriptImportReq)(nil), "exascript_import_req")
	proto.RegisterType((*ConnectionInformationRep)(nil), "connection_information_rep")
	proto.RegisterType((*ExascriptImportRep)(nil), "exascript_import_rep")
	proto.RegisterType((*ExascriptNextDataRep)(nil), "exascript_next_data_rep")
	proto.RegisterType((*ExascriptEmitDataReq)(nil), "exascript_emit_data_req")
	proto.RegisterType((*ExascriptReturnReq)(nil), "exascript_return_req")
	proto.RegisterType((*ExascriptUndefinedCallReq)(nil), "exascript_undefined_call_req")
	proto.RegisterType((*KeyValuePair)(nil), "key_value_pair")
	proto.RegisterType((*ImportSpecificationRep)(nil), "import_specification_rep")
	proto.RegisterType((*ExascriptSingleCallRep)(nil), "exascript_single_call_rep")
	proto.RegisterType((*ExascriptRequest)(nil), "exascript_request")
	proto.RegisterType((*ExascriptResponse)(nil), "exascript_response")
}

func init() { proto.RegisterFile("zmqcontainer.proto", fileDescriptor_91e3ffbfa0fb188a) }

var fileDescriptor_91e3ffbfa0fb188a = []byte{
	// 1619 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x5b, 0x8f, 0xe3, 0x48,
	0x15, 0x5e, 0x3b, 0xce, 0xed, 0xe4, 0x56, 0xf1, 0x74, 0xcf, 0x78, 0x66, 0x67, 0x20, 0x93, 0xb9,
	0x28, 0x6a, 0x21, 0x4b, 0x93, 0x5d, 0x16, 0x69, 0x01, 0xa1, 0x5c, 0xdc, 0xbd, 0x16, 0xb1, 0x63,
	0x12, 0x07, 0x76, 0x85, 0x44, 0xc9, 0xed, 0x54, 0x37, 0x66, 0x7c, 0x1b, 0x5f, 0xe6, 0xb2, 0x4f,
	0x48, 0xbc, 0xf2, 0x07, 0x40, 0xe2, 0xb7, 0xf0, 0x57, 0x78, 0xe2, 0x3f, 0x00, 0x2f, 0xa8, 0xca,
	0xd5, 0x1d, 0xa7, 0x3b, 0xbd, 0xcb, 0x3c, 0xf1, 0x94, 0xd4, 0xa9, 0xaf, 0x4e, 0x9d, 0xf3, 0x7d,
	0xe7, 0x9c, 0x32, 0xc8, 0xdf, 0x06, 0x6f, 0xdc, 0x28, 0xcc, 0x1c, 0x2f, 0x24, 0x89, 0x1a, 0x27,
	0x51, 0x16, 0x0d, 0xff, 0x25, 0x82, 0x4c, 0xde, 0x3b, 0xa9, 0x9b, 0x78, 0x71, 0x86, 0x03, 0x92,
	0x39, 0x5b, 0x27, 0x73, 0xe4, 0x67, 0xd0, 0xf3, 0xc2, 0x38, 0xcf, 0xb0, 0x97, 0x91, 0x04, 0x67,
	0x1f, 0x62, 0xa2, 0x08, 0x03, 0x71, 0xd4, 0x1d, 0x83, 0x7a, 0x6d, 0x91, 0x9f, 0x03, 0x8a, 0xf2,
	0x6c, 0x1f, 0x25, 0xde, 0x42, 0xfd, 0x0c, 0x3a, 0x85, 0x2b, 0x37, 0xf2, 0xf3, 0x20, 0x4c, 0x95,
	0xca, 0xa0, 0x32, 0x6a, 0x8d, 0x5f, 0xa8, 0xb7, 0xaf, 0x55, 0x0b, 0x08, 0xde, 0x92, 0x0b, 0x2f,
	0xf4, 0x32, 0x2f, 0x0a, 0xe5, 0x9f, 0x43, 0x97, 0xdf, 0x71, 0x75, 0x5c, 0xfa, 0x98, 0xe3, 0x0a,
	0xa0, 0xd4, 0x0b, 0x2f, 0x7d, 0x82, 0x5d, 0xc7, 0xf7, 0x71, 0x10, 0x6d, 0x89, 0x52, 0x1d, 0x88,
	0xa3, 0xc6, 0xa3, 0x3f, 0x0a, 0xd0, 0xbf, 0x8d, 0x6f, 0x83, 0x14, 0x3a, 0x41, 0x91, 0x6c, 0x53,
	0x7e, 0x04, 0x12, 0x4f, 0x4a, 0x18, 0x75, 0xc7, 0xed, 0x2b, 0xff, 0x2c, 0xad, 0x3e, 0x34, 0xe9,
	0x2f, 0x66, 0xf0, 0x0a, 0x83, 0xb7, 0x41, 0x4a, 0xbd, 0x6f, 0x89, 0x22, 0x0d, 0x84, 0x51, 0x87,
	0x02, 0xe2, 0x84, 0xb8, 0x5e, 0xea, 0x45, 0xa1, 0x52, 0x65, 0xa6, 0x0e, 0x54, 0x53, 0xd7, 0xf1,
	0x89, 0x52, 0xa3, 0xcb, 0xe1, 0x3f, 0x04, 0x38, 0xda, 0x65, 0x91, 0x39, 0xe7, 0x3e, 0xc1, 0x8c,
	0xfd, 0x36, 0x48, 0x49, 0xf4, 0x2e, 0x65, 0x51, 0x48, 0xf2, 0x31, 0x74, 0xe8, 0x0a, 0x7b, 0x21,
	0xbe, 0x4c, 0xa2, 0x3c, 0x56, 0x1a, 0xcc, 0x7c, 0x0f, 0x5a, 0x14, 0x8c, 0xd3, 0x2c, 0xf1, 0xc2,
	0x4b, 0x45, 0x1c, 0x54, 0x46, 0x4d, 0xf9, 0x3e, 0x00, 0x33, 0x86, 0xb9, 0xef, 0x17, 0x4c, 0x37,
	0xa6, 0x22, 0x12, 0xe4, 0x63, 0x68, 0x32, 0xfb, 0x79, 0x14, 0xf9, 0x8c, 0xc1, 0xc2, 0x7c, 0x05,
	0xf7, 0xc2, 0xec, 0xb3, 0xb1, 0x52, 0x1d, 0x54, 0x46, 0xd5, 0x9b, 0xf6, 0x2f, 0x3e, 0x57, 0x6a,
	0x83, 0xca, 0xa8, 0xc2, 0xec, 0x0f, 0xf8, 0x9d, 0xdb, 0x28, 0x3f, 0xf7, 0x89, 0x52, 0x1f, 0x54,
	0x46, 0xc2, 0xd5, 0x81, 0x24, 0x7a, 0x87, 0xc3, 0x3c, 0x38, 0x27, 0x89, 0xd2, 0x1c, 0x54, 0x46,
	0x12, 0xb5, 0x0f, 0xbf, 0x04, 0xb4, 0xcb, 0xd0, 0xf5, 0x3d, 0x12, 0x66, 0x34, 0xf0, 0xe2, 0x1f,
	0x2e, 0x51, 0xdd, 0x87, 0x26, 0x95, 0x11, 0x7b, 0xe1, 0x45, 0xc4, 0xf8, 0x6e, 0x0e, 0xff, 0x2e,
	0x42, 0x77, 0x77, 0x98, 0x6e, 0x50, 0x2a, 0xe8, 0xfd, 0xe7, 0x4e, 0x4a, 0xca, 0x87, 0x15, 0x40,
	0xd7, 0xe6, 0xb7, 0x24, 0x61, 0x8c, 0x8b, 0x6c, 0xe7, 0x1e, 0xb4, 0xf8, 0xf9, 0x92, 0x4e, 0xd4,
	0x18, 0xe5, 0x89, 0x4b, 0xb0, 0x4b, 0xeb, 0x41, 0x62, 0x46, 0x19, 0x20, 0x25, 0x29, 0x3d, 0x8a,
	0xbd, 0x2d, 0xab, 0x11, 0x49, 0x3e, 0x82, 0x76, 0x9a, 0x39, 0x19, 0x09, 0x68, 0xb0, 0xde, 0x56,
	0xa9, 0x0d, 0xc4, 0x51, 0x87, 0x22, 0xc3, 0x68, 0x4b, 0x0f, 0xe7, 0x61, 0xa6, 0xd4, 0x99, 0xad,
	0x07, 0x75, 0x66, 0xf3, 0xb6, 0x4c, 0x1d, 0x26, 0xf5, 0xdb, 0x80, 0x2e, 0x9b, 0xcc, 0xd3, 0x63,
	0x38, 0x0a, 0x9c, 0xf7, 0x5e, 0xe0, 0xf8, 0x38, 0x20, 0x41, 0x94, 0x7c, 0xc0, 0xbe, 0x17, 0x78,
	0x99, 0xd2, 0x62, 0xbb, 0x7b, 0xc9, 0xb7, 0x69, 0xf2, 0x34, 0x53, 0x1e, 0x78, 0xea, 0xfe, 0x9e,
	0x04, 0x8e, 0xd2, 0x61, 0x51, 0x1e, 0x41, 0xdb, 0xcd, 0x93, 0x84, 0xc6, 0x93, 0xa7, 0x24, 0x51,
	0xba, 0x0c, 0x7c, 0x1f, 0xba, 0x57, 0x56, 0x8e, 0xee, 0x31, 0x06, 0x9f, 0x95, 0x09, 0x8c, 0xbd,
	0xf0, 0x72, 0xff, 0x26, 0x46, 0xde, 0xf0, 0x47, 0xd0, 0x2b, 0x4b, 0x14, 0xa5, 0x44, 0x7e, 0x08,
	0x7d, 0xf2, 0xde, 0x25, 0x31, 0x6d, 0x09, 0x1c, 0x90, 0x34, 0x75, 0x2e, 0x29, 0xd5, 0xd4, 0xe5,
	0xef, 0xca, 0x25, 0xeb, 0x05, 0x71, 0x94, 0x64, 0x38, 0x21, 0x6f, 0x6e, 0x12, 0x5d, 0xe8, 0xf2,
	0x0a, 0xa4, 0xd7, 0x5e, 0xb8, 0xbd, 0xee, 0x1f, 0x8e, 0xa7, 0x7d, 0xf3, 0xe5, 0xb1, 0x35, 0xc5,
	0xba, 0x61, 0x2d, 0x57, 0x36, 0x5e, 0xcf, 0x56, 0xba, 0x65, 0xe3, 0xd9, 0x72, 0xae, 0x0d, 0x7f,
	0x0b, 0x8f, 0xdc, 0x28, 0x0c, 0x89, 0xcb, 0xee, 0xa6, 0x61, 0x26, 0x81, 0xc3, 0xfe, 0x27, 0x24,
	0xa6, 0x8d, 0xc1, 0x1c, 0x16, 0xee, 0x7b, 0x50, 0x77, 0xb6, 0xdb, 0x84, 0xa4, 0x29, 0x57, 0xbb,
	0x0d, 0x12, 0x63, 0xa5, 0x90, 0x19, 0x41, 0x23, 0x76, 0xd2, 0xf4, 0x5d, 0x94, 0x6c, 0x0b, 0x8d,
	0x87, 0x7f, 0x12, 0x0e, 0x46, 0x1f, 0xdf, 0xac, 0x08, 0x96, 0xea, 0x61, 0x16, 0x58, 0x69, 0xca,
	0x3f, 0x85, 0xfb, 0x87, 0xa3, 0x54, 0x2a, 0x03, 0x61, 0xd4, 0x1a, 0x7f, 0xaa, 0xde, 0x9d, 0xc4,
	0xf0, 0x17, 0xf0, 0x60, 0x17, 0x44, 0x48, 0xde, 0x67, 0xac, 0xe9, 0x59, 0x1c, 0xcf, 0xa1, 0xca,
	0xc6, 0x00, 0xcb, 0xa7, 0x35, 0x3e, 0x56, 0x0f, 0x8d, 0x87, 0x7d, 0x07, 0x24, 0xf0, 0xae, 0x1d,
	0xbc, 0xf9, 0x1f, 0x1d, 0xbc, 0x2c, 0xd3, 0x90, 0x90, 0x2c, 0x4f, 0x42, 0x76, 0xba, 0x0b, 0xb5,
	0x84, 0xa4, 0xb9, 0x9f, 0xf1, 0xd2, 0x78, 0x05, 0x8f, 0x77, 0xb8, 0x3c, 0x64, 0x73, 0x92, 0x6c,
	0x8b, 0x51, 0x4a, 0xf1, 0x7d, 0x68, 0x26, 0x24, 0x88, 0x32, 0x82, 0x2f, 0xc2, 0xeb, 0x6a, 0xea,
	0xbe, 0x26, 0x1f, 0xf0, 0x5b, 0xc7, 0xcf, 0x09, 0x8e, 0x1d, 0x2f, 0x91, 0x5b, 0x50, 0x79, 0x4d,
	0x3e, 0x70, 0xc9, 0x68, 0x5b, 0xd0, 0xad, 0x42, 0xb0, 0xe1, 0xbf, 0x05, 0x50, 0xb8, 0x0c, 0x69,
	0x4c, 0x5c, 0xef, 0xc2, 0x73, 0x77, 0x62, 0x1f, 0x41, 0xdb, 0x4b, 0x71, 0x9a, 0x9f, 0xa7, 0xc4,
	0x27, 0x6e, 0x11, 0x53, 0xe3, 0x3b, 0xa8, 0x17, 0xbf, 0x97, 0x7a, 0xf9, 0x01, 0xf4, 0x4a, 0xbb,
	0x7c, 0x24, 0x50, 0x41, 0x0d, 0xf8, 0xc1, 0xf5, 0x45, 0xfc, 0xa5, 0xd9, 0x8f, 0xe8, 0xe3, 0x9e,
	0x9d, 0x67, 0x00, 0xb1, 0x93, 0x38, 0x01, 0xc9, 0x48, 0x92, 0xb2, 0xb9, 0xda, 0x1a, 0xf7, 0xd4,
	0x7d, 0x62, 0x86, 0x7f, 0x16, 0xe0, 0xe1, 0xce, 0x5b, 0xf9, 0x99, 0x2a, 0x4a, 0x41, 0xe4, 0xa4,
	0x76, 0xc7, 0x8a, 0x5a, 0xde, 0xbd, 0xc8, 0x43, 0x9e, 0xdd, 0x56, 0xfe, 0x09, 0x1c, 0x1d, 0xe2,
	0x8f, 0x73, 0xf1, 0x50, 0xbd, 0x93, 0x5c, 0x04, 0x8d, 0x3f, 0xa4, 0x51, 0x88, 0x9d, 0xe4, 0xb2,
	0xa0, 0x60, 0xf8, 0x1f, 0x91, 0xd6, 0xfb, 0xae, 0x2a, 0xde, 0xe4, 0x24, 0xcd, 0xe4, 0x4f, 0xf9,
	0x13, 0x58, 0x04, 0xd2, 0x51, 0x79, 0x1f, 0x14, 0x6f, 0xe0, 0x31, 0x74, 0xca, 0x64, 0x6f, 0x99,
	0xaa, 0x92, 0xfc, 0x14, 0x6a, 0xc5, 0x80, 0xe7, 0xdd, 0xd0, 0x57, 0x6f, 0xbd, 0x01, 0x4f, 0x40,
	0x62, 0x23, 0x48, 0x62, 0x80, 0x9e, 0x7a, 0x63, 0xce, 0xff, 0x10, 0xaa, 0x6c, 0x12, 0xb1, 0x77,
	0xb3, 0x35, 0x46, 0xea, 0xcd, 0x09, 0xf5, 0x02, 0x6a, 0x45, 0x6a, 0xec, 0x29, 0xdd, 0x2f, 0xf4,
	0xd2, 0x54, 0x7a, 0x09, 0x12, 0xed, 0x0f, 0xa5, 0xce, 0x40, 0x8a, 0x7a, 0x57, 0xdb, 0x3c, 0x01,
	0x89, 0x8e, 0x47, 0xa5, 0x71, 0x2b, 0x1c, 0x36, 0x35, 0x4f, 0xa0, 0xc5, 0x75, 0x61, 0xcd, 0xd1,
	0xbc, 0x75, 0x65, 0xa9, 0x87, 0x7e, 0x0c, 0xdd, 0xfd, 0x4e, 0x51, 0x80, 0xc1, 0x9f, 0xa8, 0xdf,
	0xd5, 0x4a, 0xc3, 0x7f, 0xee, 0x7d, 0x87, 0x25, 0x24, 0x8d, 0xa3, 0x30, 0x25, 0xff, 0x27, 0xfa,
	0x9f, 0x82, 0x44, 0x8b, 0x9b, 0xb3, 0x7f, 0xef, 0x40, 0xcd, 0xef, 0x14, 0xaa, 0x7d, 0xaf, 0x42,
	0xf5, 0xbb, 0x15, 0x8a, 0xa9, 0x42, 0x74, 0x04, 0x72, 0xe6, 0xcb, 0x0a, 0xed, 0x4f, 0xc6, 0x2b,
	0x85, 0x9a, 0x87, 0x15, 0x1a, 0x81, 0x54, 0xe2, 0xfa, 0x91, 0x7a, 0x67, 0x5f, 0x9d, 0xfc, 0x55,
	0x80, 0x56, 0xf9, 0x3b, 0x4e, 0x86, 0xae, 0x35, 0xc5, 0x1b, 0x73, 0xbd, 0xb1, 0xe8, 0x63, 0xa4,
	0xcd, 0xd1, 0x27, 0x72, 0x07, 0x9a, 0xd6, 0x14, 0xcf, 0x97, 0x9b, 0xe9, 0x42, 0x43, 0x82, 0xdc,
	0x86, 0x06, 0x7d, 0xac, 0x4c, 0xfb, 0xb3, 0x31, 0x12, 0x77, 0xab, 0x2f, 0x3e, 0x47, 0x15, 0xb9,
	0x0b, 0x60, 0x4d, 0xb1, 0xb9, 0x31, 0xb4, 0x95, 0x3e, 0x43, 0x92, 0x8c, 0xa0, 0x6d, 0x4d, 0xb1,
	0xad, 0x1b, 0xda, 0xda, 0x9e, 0x18, 0x16, 0xaa, 0xca, 0x2d, 0xa8, 0x53, 0x67, 0x13, 0x5b, 0x43,
	0x35, 0xee, 0x79, 0x6d, 0xaf, 0x74, 0xf3, 0x0c, 0xd5, 0xf9, 0xe9, 0xe9, 0x72, 0xb9, 0xd0, 0x26,
	0x26, 0x6a, 0x9c, 0xbc, 0x82, 0xe6, 0xee, 0xc3, 0xf9, 0x1e, 0xf4, 0xac, 0x29, 0xd6, 0xbe, 0x9e,
	0xcc, 0xec, 0xc5, 0x37, 0x78, 0x69, 0xce, 0x68, 0x2c, 0x3d, 0x68, 0x59, 0x53, 0x6c, 0x6c, 0x16,
	0xb6, 0x6e, 0x2d, 0x34, 0x24, 0x9e, 0x98, 0xd0, 0x2a, 0x3d, 0xab, 0xf2, 0x43, 0x38, 0xfc, 0xb0,
	0x22, 0x41, 0x7e, 0x0e, 0x83, 0xdd, 0xd6, 0x6c, 0x69, 0x9a, 0xda, 0xcc, 0xd6, 0x97, 0x26, 0xd6,
	0xcd, 0xd3, 0xe5, 0xca, 0x98, 0xd0, 0xff, 0x48, 0x3c, 0xf9, 0x8b, 0x00, 0x0f, 0xee, 0x9a, 0x36,
	0x1d, 0x68, 0xae, 0x67, 0xf8, 0xd4, 0xc4, 0xa6, 0xbe, 0x40, 0x9f, 0xc8, 0x03, 0x78, 0x5c, 0x2c,
	0xe7, 0xda, 0xe9, 0x64, 0xb3, 0xb0, 0xf1, 0x72, 0x63, 0x5b, 0x1b, 0xea, 0x7b, 0xb1, 0x31, 0xcc,
	0x35, 0x12, 0xe4, 0x17, 0xf0, 0xb4, 0x40, 0xfc, 0x5a, 0x5f, 0xd9, 0x9b, 0xc9, 0x02, 0xaf, 0x67,
	0x5f, 0x69, 0xc6, 0x04, 0x4f, 0xe6, 0x13, 0xcb, 0xd6, 0x56, 0x78, 0x36, 0x59, 0x2c, 0x90, 0x28,
	0xbf, 0x84, 0x61, 0x01, 0x3b, 0xd3, 0x4c, 0x6d, 0x35, 0xb1, 0x35, 0xbc, 0xfe, 0xd5, 0x02, 0x9f,
	0x2e, 0x57, 0xd7, 0x89, 0x58, 0xda, 0x0c, 0x55, 0x4e, 0xfe, 0x26, 0x42, 0x7b, 0xaf, 0x03, 0xba,
	0x00, 0x86, 0x8d, 0x37, 0xe6, 0x2f, 0xcd, 0xe5, 0x6f, 0xcc, 0x42, 0x38, 0xc3, 0xc6, 0xb3, 0x85,
	0xae, 0x99, 0x36, 0x12, 0x28, 0xf5, 0x86, 0xcd, 0xf2, 0x43, 0x22, 0x5f, 0x18, 0x9a, 0x3d, 0x41,
	0x15, 0x2a, 0x22, 0x03, 0x2e, 0xd7, 0x1a, 0x92, 0xf8, 0xb1, 0xe2, 0xae, 0x42, 0x31, 0xc3, 0xc6,
	0xa6, 0xf6, 0xb5, 0x8d, 0x6a, 0x1c, 0xb9, 0xd2, 0xd6, 0x9a, 0x8d, 0xea, 0x7c, 0x4b, 0x33, 0x74,
	0x1b, 0x35, 0x64, 0x80, 0x1a, 0xdd, 0xda, 0x98, 0xa8, 0xc9, 0x37, 0xe6, 0x4b, 0x53, 0x43, 0xc0,
	0xc3, 0x9a, 0x51, 0x51, 0x37, 0x16, 0x6a, 0x51, 0xd1, 0x0c, 0x1b, 0x9f, 0xea, 0xa6, 0xbe, 0xfe,
	0x4a, 0x9b, 0xa3, 0x36, 0xad, 0x12, 0xc3, 0xc6, 0x96, 0x6e, 0x9e, 0x61, 0x6b, 0x69, 0x9e, 0xa1,
	0x0e, 0xb7, 0xd8, 0xab, 0x6f, 0xf0, 0xe4, 0x6c, 0xa2, 0x9b, 0xa8, 0xcb, 0x3d, 0x32, 0x86, 0x7a,
	0x3c, 0xc2, 0x95, 0x66, 0x6f, 0x56, 0x26, 0x42, 0xf2, 0x31, 0xf4, 0x59, 0xde, 0x73, 0xed, 0x54,
	0x37, 0xb5, 0x79, 0x81, 0xea, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x27, 0x51, 0xc9, 0xe1,
	0x0d, 0x00, 0x00,
}
